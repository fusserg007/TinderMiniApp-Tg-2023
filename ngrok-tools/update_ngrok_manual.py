#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL Ngrok –≤ .env —Ñ–∞–π–ª–µ
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python update_ngrok_manual.py <ngrok_url>
"""

import os
import re
import sys

def update_env_file(ngrok_url):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª .env —Å –Ω–æ–≤—ã–º URL Ngrok"""
    # –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    env_file_path = os.path.join("..", ".env")
    
    if not os.path.exists(env_file_path):
        print(f"‚ùå –§–∞–π–ª {env_file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(env_file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º WEBAPP_URL (—ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π URL –¥–ª—è Telegram –±–æ—Ç–∞)
        if 'WEBAPP_URL=' in content:
            # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
            old_content = content
            content = re.sub(r'WEBAPP_URL=.*', f'WEBAPP_URL={ngrok_url}', content)
            
            if content != old_content:
                print(f"‚úì –û–±–Ω–æ–≤–ª–µ–Ω WEBAPP_URL: {ngrok_url}")
            else:
                print(f"‚ö†Ô∏è WEBAPP_URL —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç—Ç–æ—Ç URL")
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
            content += f'\nWEBAPP_URL={ngrok_url}\n'
            print(f"‚úì –î–æ–±–∞–≤–ª–µ–Ω WEBAPP_URL: {ngrok_url}")
        
        # –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º NGROK_URL –µ—Å–ª–∏ –µ—Å—Ç—å
        if 'NGROK_URL=' in content:
            content = re.sub(r'NGROK_URL=.*', f'NGROK_URL={ngrok_url}', content)
            print(f"‚úì –û–±–Ω–æ–≤–ª–µ–Ω NGROK_URL: {ngrok_url}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(env_file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"\n‚úÖ –§–∞–π–ª {env_file_path} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ .env: {e}")
        return False

def validate_ngrok_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ URL –ø–æ—Ö–æ–∂ –Ω–∞ Ngrok URL"""
    ngrok_patterns = [
        r'https://[a-zA-Z0-9-]+\.ngrok-free\.app',
        r'https://[a-zA-Z0-9-]+\.ngrok\.io',
        r'https://[a-zA-Z0-9-]+\.ngrok\.app',
        r'http://[a-zA-Z0-9-]+\.ngrok-free\.app',
        r'http://[a-zA-Z0-9-]+\.ngrok\.io',
        r'http://[a-zA-Z0-9-]+\.ngrok\.app'
    ]
    
    for pattern in ngrok_patterns:
        if re.match(pattern, url, re.IGNORECASE):
            return True
    
    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL Ngrok –≤ .env —Ñ–∞–π–ª–µ ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) != 2:
        print("\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"  python {sys.argv[0]} <ngrok_url>")
        print("\n–ü—Ä–∏–º–µ—Ä:")
        print(f"  python {sys.argv[0]} https://abc123.ngrok-free.app")
        print("\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ URL —Å–µ–π—á–∞—Å:")
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        ngrok_url = input("–í–≤–µ–¥–∏—Ç–µ URL Ngrok: ").strip()
    else:
        ngrok_url = sys.argv[1].strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    if not ngrok_url:
        print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º https:// –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª
    if not ngrok_url.startswith(('http://', 'https://')):
        ngrok_url = 'https://' + ngrok_url
        print(f"‚ÑπÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª: {ngrok_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ Ngrok URL
    if not validate_ngrok_url(ngrok_url):
        print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: '{ngrok_url}' –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Ngrok URL")
        confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").strip().lower()
        if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
            print("–û—Ç–º–µ–Ω–µ–Ω–æ")
            return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    if update_env_file(ngrok_url):
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
        print("\n–î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ backend –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  cd backend")
        print("  npm run dev")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª")

if __name__ == "__main__":
    main()