const fs = require('fs');
const path = require('path');
const sharp = require('sharp');

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∂–∞—Ç–∏—è
 */
async function createTestImage() {
    console.log('üé® –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
    
    try {
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1000x1000 –ø–∏–∫—Å–µ–ª–µ–π
        const testImageBuffer = await sharp({
            create: {
                width: 1000,
                height: 1000,
                channels: 3,
                background: { r: 255, g: 100, b: 50 } // –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω
            }
        })
        .png()
        .toBuffer();
        
        const testImagePath = path.join(__dirname, 'backend', 'uploads', 'test-image.png');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        fs.writeFileSync(testImagePath, testImageBuffer);
        
        const stats = fs.statSync(testImagePath);
        console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${testImagePath}`);
        console.log(`üìè –†–∞–∑–º–µ—Ä: ${(stats.size / 1024).toFixed(2)} KB`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
createTestImage().catch(console.error);