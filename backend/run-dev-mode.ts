import { config } from 'dotenv';
import express from 'express';
import path from 'path';
import { config } from 'dotenv';

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram Mini App
 * –ë–µ–∑ MongoDB - —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram
 */
async function startServer() {
  try {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const result = config({ path: '.env' });
    console.log("üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω .env —Ñ–∞–π–ª:", result.parsed ? "‚úÖ –£—Å–ø–µ—à–Ω–æ" : "‚ùå –û—à–∏–±–∫–∞");
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    console.log("üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:", {
      BOT_TOKEN: process.env.BOT_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
      WEBHOOK_URL: process.env.WEBHOOK_URL || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      PORT: process.env.PORT || '4000',
      TEST_MODE: process.env.TEST_MODE || 'false'
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const app = express();
    const port = Number(process.env.PORT) || 4000;

    // Middleware
    app.use(express.json());
    app.use(express.urlencoded({ extended: true }));
    
    // CORS –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    app.use((req, res, next) => {
      res.header('Access-Control-Allow-Origin', '*');
      res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
      res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
      if (req.method === 'OPTIONS') {
        res.sendStatus(200);
      } else {
        next();
      }
    });

    // –ë–∞–∑–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    // Health check
    app.get('/health', (req, res) => {
      res.json({ 
        status: 'ok', 
        timestamp: new Date().toISOString(),
        mode: 'local-testing',
        telegram_configured: !!process.env.BOT_TOKEN
      });
    });

    // Webhook –¥–ª—è Telegram
    app.post('/webhook', (req, res) => {
      console.log('üì® –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram:', {
        timestamp: new Date().toISOString(),
        body: req.body,
        headers: req.headers
      });
      
      // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      res.json({ ok: true, message: 'Webhook –ø–æ–ª—É—á–µ–Ω' });
    });

    // API –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Mini App
    app.get('/api/user/profile', (req, res) => {
      console.log('üë§ –ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      res.json({
        id: 'test_user_123',
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        age: 25,
        bio: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        photos: ['/api/placeholder-photo.jpg'],
        created_at: new Date().toISOString()
      });
    });

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    app.get('/api/matches/potential', (req, res) => {
      console.log('üíï –ó–∞–ø—Ä–æ—Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π');
      res.json({
        profiles: [
          {
            id: 'test_match_1',
            name: '–ê–Ω–Ω–∞',
            age: 23,
            bio: '–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏',
            photos: ['/api/placeholder-photo.jpg'],
            distance: 2.5
          },
          {
            id: 'test_match_2', 
            name: '–ú–∞—Ä–∏—è',
            age: 27,
            bio: '–§–æ—Ç–æ–≥—Ä–∞—Ñ –∏ –ª—é–±–∏—Ç–µ–ª—å –∫–æ—Ñ–µ',
            photos: ['/api/placeholder-photo.jpg'],
            distance: 1.2
          }
        ]
      });
    });

    // –õ–∞–π–∫/–¥–∏–∑–ª–∞–π–∫
    app.post('/api/matches/action', (req, res) => {
      const { profileId, action } = req.body;
      console.log(`${action === 'like' ? 'üíö' : 'üíî'} –î–µ–π—Å—Ç–≤–∏–µ:`, { profileId, action });
      
      // –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      const isMatch = action === 'like' && Math.random() > 0.7;
      
      res.json({
        success: true,
        match: isMatch,
        message: isMatch ? '–í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! üéâ' : '–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ'
      });
    });

    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ
    app.get('/api/placeholder-photo.jpg', (req, res) => {
      res.redirect('https://via.placeholder.com/400x600/FF6B6B/FFFFFF?text=Test+Photo');
    });

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    app.get('/api/bot/info', (req, res) => {
      res.json({
        configured: !!process.env.BOT_TOKEN,
        webhook_url: process.env.WEBHOOK_URL,
        test_mode: process.env.TEST_MODE === 'true',
        frontend_url: process.env.FRONTEND_URL || 'http://localhost:5173'
      });
    });

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    app.get('/', (req, res) => {
      res.json({
        name: 'Tinder Mini App Backend',
        version: '1.0.0',
        mode: 'local-testing',
        endpoints: {
          health: '/health',
          webhook: '/webhook',
          user_profile: '/api/user/profile',
          potential_matches: '/api/matches/potential',
          match_action: '/api/matches/action',
          bot_info: '/api/bot/info'
        },
        documentation: '–ü—Ä–æ—Å—Ç–æ–π backend –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram Mini App'
      });
    });

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    app.listen(port, () => {
      console.log('');
      console.log('üéâ Backend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
      console.log(`üåê URL: http://localhost:${port}`);
      console.log(`üì± –†–µ–∂–∏–º: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`);
      console.log(`ü§ñ Telegram Bot: ${process.env.BOT_TOKEN ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
      console.log(`üîó Webhook: ${process.env.WEBHOOK_URL || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      console.log('');
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:');
      console.log(`   GET  /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è`);
      console.log(`   POST /webhook - Webhook Telegram`);
      console.log(`   GET  /api/user/profile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
      console.log(`   GET  /api/matches/potential - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è`);
      console.log(`   POST /api/matches/action - –õ–∞–π–∫/–¥–∏–∑–ª–∞–π–∫`);
      console.log(`   GET  /api/bot/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ`);
      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
      console.log('');
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGINT', () => {
      console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
      process.exit(0);
    });
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
startServer();
