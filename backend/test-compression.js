/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∂–∞—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é sharp
 */

import sharp from 'sharp';
import fs from 'fs';
import path from 'path';

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} inputPath - –ø—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
 * @param {string} outputPath - –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∂–∞—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
async function testImageCompression(inputPath, outputPath) {
  try {
    console.log('üñºÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
    if (!fs.existsSync(inputPath)) {
      console.log('‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', inputPath);
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ
    const originalStats = fs.statSync(inputPath);
    console.log('üìä –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', (originalStats.size / 1024).toFixed(2), 'KB');

    // –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const originalBuffer = fs.readFileSync(inputPath);
    
    // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const metadata = await sharp(originalBuffer).metadata();
    console.log('üìê –ò—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:', `${metadata.width}x${metadata.height}`);
    console.log('üé® –§–æ—Ä–º–∞—Ç:', metadata.format);

    // –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ç–∞–∫–∏–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∫–∞–∫ –≤ auth.ts)
    const compressedBuffer = await sharp(originalBuffer)
      .resize(800, 800, {
        fit: 'inside',
        withoutEnlargement: true
      })
      .jpeg({
        quality: 85,
        progressive: true
      })
      .toBuffer();

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    fs.writeFileSync(outputPath, compressedBuffer);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∂–∞—Ç–æ–º —Ñ–∞–π–ª–µ
    const compressedStats = fs.statSync(outputPath);
    const compressedMetadata = await sharp(compressedBuffer).metadata();
    
    console.log('‚úÖ –°–∂–∞—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìä –†–∞–∑–º–µ—Ä —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞:', (compressedStats.size / 1024).toFixed(2), 'KB');
    console.log('üìê –ù–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã:', `${compressedMetadata.width}x${compressedMetadata.height}`);
    console.log('üíæ –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞:', ((originalStats.size - compressedStats.size) / originalStats.size * 100).toFixed(1), '%');
    console.log('üìÅ –°–∂–∞—Ç—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', outputPath);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏:', error.message);
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const inputFile = './test-image.jpg'; // –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É backend
const outputFile = './test-image-compressed.jpg';

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
console.log('üìù –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª test-image.jpg –≤ –ø–∞–ø–∫—É backend');
console.log('üöÄ –ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node test-compression.js');

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (fs.existsSync(inputFile)) {
  testImageCompression(inputFile, outputFile);
} else {
  console.log('‚ÑπÔ∏è –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª test-image.jpg –≤ –ø–∞–ø–∫–µ backend');
  console.log('üìã –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∂–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
}